# This file uses golang text templates (http://golang.org/pkg/text/template/) to
# dynamically configure the haproxy loadbalancer.
global
    daemon
    stats socket /tmp/haproxy
    server-state-file global
    server-state-base /var/state/haproxy/

{{ if eq .StartSyslog "true" }}
    # log using a syslog socket
    log /var/run/haproxy.log.socket local0 info
    log /var/run/haproxy.log.socket local0 notice
{{ end }}

defaults
    log global

    load-server-state-from-file global

    # Enable session redistribution in case of connection failure.
    option redispatch

    # Disable logging of null connections (haproxy connections like checks). 
    # This avoids excessive logs from haproxy internals.
    option dontlognull

    # Enable HTTP connection closing on the server side.
    option http-server-close

    # Enable insertion of the X-Forwarded-For header to requests sent to 
    # servers and keep client IP address.
    option forwardfor

    # Enable HTTP keep-alive from client to server.
    option http-keep-alive

    # Clients should send their full http request in 5s.
    timeout http-request    5s

    # Maximum time to wait for a connection attempt to a server to succeed.
    timeout connect         5s

    # Maximum inactivity time on the client side.
    # Applies when the client is expected to acknowledge or send data.
    timeout client          50s

    # Inactivity timeout on the client side for half-closed connections.
    # Applies when the client is expected to acknowledge or send data 
    # while one direction is already shut down.
    timeout client-fin      50s

    # Maximum inactivity time on the server side.
    timeout server          50s

    # timeout to use with WebSocket and CONNECT
    timeout tunnel          1h

    # Maximum allowed time to wait for a new HTTP request to appear.
    timeout http-keep-alive 60s

    # default traffic mode is http
    # mode is overwritten in case of tcp services
    mode http

# haproxy stats, required hostport and firewall rules for :1936
listen stats
    bind *:1936
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /

frontend http-in
        bind :80
{{ range $ing := .Items }}
    {{ range $rule := $ing.Spec.Rules }}
        acl host_{{ $rule.Host }} hdr(host) -i {{ $rule.Host }}
        http-request set-header Host {{ $rule.Host }} if host_{{ $rule.Host }}
        {{ range $index, $path := $rule.HTTP.Paths }}
        acl host_{{ $rule.Host }}_{{ $index }} url_beg {{ $path.Path }}
        use_backend backend_{{ $rule.Host }}_{{ $index }} if host_{{ $rule.Host }} AND host_{{ $rule.Host }}_{{ $index }}
        {{ end }}
    {{ end }}
{{ end }}

{{range $ing := .Items}}
    {{range $rule := $ing.Spec.Rules}}
        {{ range $index, $path := $rule.HTTP.Paths }}
backend backend_{{ $rule.Host }}_{{ $index }}
    reqrep ^([^\ :]*)\ {{ $path.Path }}/(.*)     \1\ /\2
    balance leastconn
    option httpclose
    option forwardfor
    server svr {{ $path.Backend.ServiceName }}.{{ $ing.Namespace }}.svc.cluster.local:{{ $path.Backend.ServicePort }}
        {{ end }}
    {{ end }}
{{ end }}
